<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<chapter id="exception.handling.framework_integration">
   <title>Framework Integration</title>

   <para>
      Integration of Seam Catch with other frameworks consists of one main step, and one other optional (but highly
      encouraged) step:
   </para>

   <itemizedlist>
      <listitem>creating and firing an
         <literal>ExceptionToCatchEvent</literal>
      </listitem>
      <listitem>adding any default handlers and qualifiers with annotation literals (optional)</listitem>
   </itemizedlist>

   <section id="exception.handling.framework_integration.exceptiontocatchevent">
      <title>Creating and Firing an ExceptionToCatchEvent</title>

      <para>
         An
         <literal>ExceptionToCatchEvent</literal>
         is constructed by passing a
         <literal>Throwable</literal>
         and
         optionally qualifiers for handlers. Firing the event is done via CDI events (either straight from the
         <literal>BeanManager</literal>
         or injecting a
         <literal>Event&lt;ExceptionToCatchEvent&gt;</literal>
         and calling fire).
      </para>

      <para>
         To ease the burden on the application developers, the integration should tie into the exception handling
         mechanism of the integrating framework, if any exist. By tying into the framework's exception handling,
         any uncaught exceptions should be routed through the Seam Catch system and allow handlers to be invoked.
         This is the typical way of using the Seam Catch framework. Of course, it doesn't stop the application
         developer from firing their own
         <literal>ExceptionToCatchEvent</literal>
         within a catch block.
      </para>
   </section>

   <section id="exception.handling.framework_integration.built-in">
      <title>Default Handlers and Qualifiers</title>

      <section id="exception.handling.framework_integration.built-in.default_handlers">
         <title>Default Handlers</title>

         <para>
            An integration with Catch can define it's own handlers to always be used. It's recommended that any
            built-in handler from an integration have a very low precedence, be a handler for as generic an
            exception as is suitable (i.e. Seam Persistence could have a built-in handler for PersistenceExceptions to
            rollback a transaction, etc), and make use of qualifiers specific for the integration. This helps limit any
            collisions with handlers the application developer may create.
         </para>

         <note>
            Hopefully at some point there will be a way to conditionally enable handlers so the application developer
            will be able to selectively enable any default handlers. Currently this does not exist, but is something
            that will be explored.
         </note>
      </section>

      <section id="exception.handling.framework_integration.built-in.qualifiers">
         <title>Qualifiers</title>

         <para>
            Catch supports qualifiers for the<literal>CaughtException</literal>. To add a qualifier to be used when
            firing
            handlers they must be add to the
            <literal>ExceptionToCatchEvent</literal>
            via the constructor (please see
            API docs for more info). Qualifiers for integrations should be used to avoid collisions in the application
            error handling both when defining handlers and when firing events from the integration.
         </para>
      </section>

   </section>
   <!--
   vim:et:ts=3:sw=3:tw=120
   -->
</chapter>
